# Standalone Production Deployment (without Traefik)
# Usage: docker compose up -d
# For SecretVM deployment with Traefik, use: docker-compose.secretvm.yml

services:
  backend:
    image: harystyles/privexbot-backend@sha256:9fb3b1d1152e5965f8b0c22a7cc9f317a6564edae257bc208a8c9516e330608b
    container_name: privexbot-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://privexbot:${POSTGRES_PASSWORD}@postgres:5432/privexbot
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - privexbot
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:16-alpine
    container_name: privexbot-postgres
    environment:
      - POSTGRES_USER=privexbot
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=privexbot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U privexbot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - privexbot
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: privexbot-redis
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - privexbot
    restart: unless-stopped

  # Celery worker - Uncomment when implementing background tasks
  # celery-worker:
  #   image: harystyles/privexbot-backend@sha256:9fb3b1d1152e5965f8b0c22a7cc9f317a6564edae257bc208a8c9516e330608b
  #   container_name: privexbot-celery
  #   command: celery -A src.app.tasks.celery_worker worker --loglevel=info
  #   env_file:
  #     - .env
  #   environment:
  #     - DATABASE_URL=postgresql://privexbot:${POSTGRES_PASSWORD}@postgres:5432/privexbot
  #     - REDIS_URL=redis://redis:6379/0
  #   depends_on:
  #     - postgres
  #     - redis
  #   networks:
  #     - privexbot
  #   restart: unless-stopped

networks:
  privexbot:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
