version: "3.9"

services:
  backend:
    image: harystyles/privexbot-backend@sha256:9fb3b1d1152e5965f8b0c22a7cc9f317a6564edae257bc208a8c9516e330608b
    env_file:
      - usr/.env
    depends_on:
      - postgres
      - redis
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`api.sapphire-finch.vm.scrtlabs.com`)
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.tls=true
      - traefik.http.services.api.loadbalancer.server.port=8000
      - traefik.docker.network=traefik

  postgres:
    image: postgres:16-alpine
    env_file:
      - usr/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - traefik
    # Not exposed to Traefik (internal only)

  redis:
    image: redis:7-alpine
    env_file:
      - usr/.env
    volumes:
      - redis_data:/data
    networks:
      - traefik
    # Not exposed to Traefik (internal only)

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - usr/.env
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@scrtlabs.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      - postgres
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.pgadmin.rule=Host(`pgadmin.sapphire-finch.vm.scrtlabs.com`)
      - traefik.http.routers.pgadmin.entrypoints=websecure
      - traefik.http.routers.pgadmin.tls=true
      - traefik.http.services.pgadmin.loadbalancer.server.port=80
      - traefik.docker.network=traefik

  redis-ui:
    image: rediscommander/redis-commander:latest
    env_file:
      - usr/.env
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.redisui.rule=Host(`redis-ui.sapphire-finch.vm.scrtlabs.com`)
      - traefik.http.routers.redisui.entrypoints=websecure
      - traefik.http.routers.redisui.tls=true
      - traefik.http.services.redisui.loadbalancer.server.port=8081
      - traefik.docker.network=traefik

  traefik:
    image: traefik:v2.10
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.options=default@file
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/secure/cert:/certs:ro
    networks:
      - traefik
    configs:
      - source: tls_config
        target: /etc/traefik/dynamic/tls.yml
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.sapphire-finch.vm.scrtlabs.com`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls=true
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - traefik.docker.network=traefik
      # Optional Basic Auth - replace the hash below with a secure one
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=admin:$2y$12$uJf8PzL1NQ9BycRuxVPz3evD/Jxh5x7dyFyE2uV6M3E0ekYFG0FgW

volumes:
  postgres_data:
  redis_data:

networks:
  traefik:
    driver: bridge

configs:
  tls_config:
    content: |-
      tls:
        certificates:
          - certFile: /certs/secret_vm_fullchain.pem
            keyFile: /certs/secret_vm_private.pem
        stores:
          default:
            defaultCertificate:
              certFile: /certs/secret_vm_fullchain.pem
              keyFile: /certs/secret_vm_private.pem
