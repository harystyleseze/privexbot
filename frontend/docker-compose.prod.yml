# Docker Compose for PrivexBot Frontend - Production Environment (Standalone)
# Purpose: Simple production deployment with pre-built image from Docker Hub
# Usage: docker compose -f docker-compose.prod.yml up -d
#
# NOTE: This is for STANDALONE deployment (frontend directly exposed on port 80)
# For SecretVM with Traefik reverse proxy, use: docker-compose.secretvm.yml
#
# IMPORTANT: Before deploying:
# 1. Build and push your image: ./scripts/docker/build-push.sh
# 2. Update the image digest below with the output from the script
# 3. Set environment variables for your production environment
# 4. If using Traefik, DO NOT use this file (use docker-compose.secretvm.yml)

services:
  frontend-prod:
    # IMPORTANT: Replace <digest> with actual SHA256 digest from Docker Hub
    # Example: harystyles/privexbot-frontend@sha256:abc123...
    # This ensures immutability and reproducibility for SecretVM deployment
    # image: harystyles/privexbot-frontend@sha256:<digest>
    
    image: harystyles/privexbot-frontend@sha256:2157b177916200b9e534c105f8a80158103b37d754fdba5f3c55fa319b278914

    container_name: privexbot-frontend-prod

    ports:
      # Map host port 80 to container port 80 (Nginx)
      # For HTTPS, use a reverse proxy (Nginx/Caddy) in front
      - "80:80"

    environment:
      # Runtime configuration variables
      # These are injected into /config.js at container startup
      - API_BASE_URL=https://api.privexbot.com/api/v1
      - WIDGET_CDN_URL=https://cdn.privexbot.com
      - ENVIRONMENT=production

    restart: unless-stopped

    # Health check to ensure container is running properly
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:80/",
        ]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

    networks:
      - privexbot-prod

networks:
  privexbot-prod:
    driver: bridge
