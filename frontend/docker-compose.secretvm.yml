# SecretVM Production Deployment with Traefik
# Usage: Upload this file to /mnt/secure/docker_wd/frontend/ as docker-compose.yml
# Then: docker compose up -d
#
# Network: harystyles.store (67.43.239.18)
# Domain: harystyles.store (Frontend)
# API: api.harystyles.store (Backend)

services:
  frontend:
    image: harystyles/privexbot-frontend@sha256:e2f119bb23b0c58fa7f722940c8a205b85131b4dd9f083fce77ca7db27944982
    container_name: privexbot-frontend-secretvm
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    networks:
      - traefik
    healthcheck:
      test:
        - CMD
        - wget
        - -O
        - "-"
        - http://localhost:80/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`harystyles.store`)
      - traefik.http.routers.app.entrypoints=websecure
      - traefik.http.routers.app.tls=true
      - traefik.http.services.app.loadbalancer.server.port=80
      - traefik.docker.network=traefik
    env_file:
      - usr/.env
  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=false
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.options=default@file
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/secure/cert:/certs:ro
    networks:
      - traefik
    configs:
      - source: tls_config
        target: /etc/traefik/dynamic/tls.yml
    env_file:
      - usr/.env
networks:
  traefik:
    driver: bridge
configs:
  tls_config:
    content: |-
      tls:
        certificates:
          - certFile: /certs/secret_vm_fullchain.pem
            keyFile: /certs/secret_vm_private.pem
        stores:
          default:
            defaultCertificate:
              certFile: /certs/secret_vm_fullchain.pem
              keyFile: /certs/secret_vm_private.pem
